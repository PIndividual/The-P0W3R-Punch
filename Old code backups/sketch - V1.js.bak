let circleX = 0;
let circleY = 0;
let mouseDelay = 0.1;
let initialDiameter = 20;
let currentDiameter = initialDiameter;
let maxDiameter = 100;
let shaking = false; // 是否处于晃动状态
let shakeStrength = 0; // 当前晃动强度
let maxShakeStrength = 100; // 最大晃动强度
let shakeSpeed = 2; // 晃动速度
let lastShakeTime = 0; // 上次晃动的时间
let defaultOpacity = 100;
let currentOpacity = defaultOpacity;
let maxOpacity = 225;
let flowSpeed;

function setup() {
  createCanvas(windowWidth, windowHeight);
  background(0);
  
  noStroke(); // 取消圆圈描边
}

function draw() {
  background(0, 55);
  let spaceBetween = 20;
  for (let horizontal = spaceBetween/2; horizontal < width; horizontal += spaceBetween) {
    for (let vertical = spaceBetween/2; vertical < height; vertical += spaceBetween) {
      
      let d = dist(mouseX, mouseY, horizontal, vertical);
      if (d <= 65) {
        let transparency = map(d, 0, 65, 200, 130);
        fill(255, transparency);
        let flowRadius = 3 + 2 * sin(frameCount * flowSpeed + horizontal + vertical);
        ellipse(horizontal, vertical, flowRadius);
      } else {
        let transparency = map(noise(horizontal*2, vertical*2, frameCount*0.03), 0, 1, 0, 10);
        fill(255, transparency);
        ellipse(horizontal, vertical, 3);
      }
      
    }
  }
  if (shaking == true) { // 如果处于晃动状态
    let timeDifference = (millis() - lastShakeTime) / 1000; // 计算时间差
    shakeStrength = min(shakeStrength + timeDifference * shakeSpeed, maxShakeStrength); // 增加晃动强度
    lastShakeTime = millis(); // 更新上次晃动的时间
    currentDiameter += timeDifference*10;
    circleX = mouseX + random(-shakeStrength, shakeStrength); // 圆圈x坐标进行晃动
    circleY = mouseY + random(-shakeStrength, shakeStrength); // 圆圈y坐标进行晃动
    currentOpacity = min(defaultOpacity+timeDifference*10, maxOpacity);
    flowSpeed = 0.25;

  } else {
    circleX += (mouseX - circleX) * mouseDelay;
    circleY += (mouseY - circleY) * mouseDelay;
    // currentOpacity = defaultOpacity;
    flowSpeed = 0.1;
  }
  fill(255, currentOpacity);
  ellipse(circleX, circleY, min(currentDiameter, maxDiameter));
}

function mousePressed() {
  lastShakeTime = millis(); // 记录当前时间戳
  shaking = true; // 开始晃动
  currentDiameter = initialDiameter;
  // currentOpacity = defaultOpacity;
}

function mouseReleased() {
  shaking = false; // 松开鼠标后退出晃动状态
  shakeStrength = 0; // 重置晃动强度
  let timer = setInterval(function decreaseDiameter() {
    currentDiameter -= 2;
    if (currentDiameter <= initialDiameter) {
      clearInterval(timer);
      currentDiameter = initialDiameter;
    }
  }, 50);
  currentOpacity = defaultOpacity;
}

function windowResized() {
  resizeCanvas(windowWidth, windowHeight);
}
